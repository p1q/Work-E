# Generated by Django 5.2.4 on 2025-10-06 10:37

import cvs.models
import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WorkOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('countries', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('cities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('is_office', models.BooleanField(blank=True, null=True)),
                ('is_remote', models.BooleanField(blank=True, null=True)),
                ('is_hybrid', models.BooleanField(blank=True, null=True)),
                ('willing_to_relocate', models.BooleanField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CV',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('position_target', models.CharField(blank=True, max_length=120, validators=[cvs.models.validate_position])),
                ('personal_first_name', models.CharField(max_length=80, validators=[cvs.models.validate_name])),
                ('personal_last_name', models.CharField(max_length=80, validators=[cvs.models.validate_name])),
                ('personal_email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('personal_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('personal_date_of_birth', models.DateField(blank=True, null=True)),
                ('personal_gender', models.CharField(blank=True, max_length=20)),
                ('personal_address_street', models.CharField(blank=True, max_length=200)),
                ('personal_address_city', models.CharField(max_length=120)),
                ('personal_address_postal_code', models.CharField(blank=True, max_length=20)),
                ('personal_address_country', models.CharField(max_length=100)),
                ('personal_address_country_code', models.CharField(blank=True, max_length=2)),
                ('personal_overview', models.TextField(blank=True, validators=[cvs.models.validate_overview])),
                ('personal_hobbies', models.TextField(blank=True, validators=[cvs.models.validate_hobbies])),
                ('status', models.CharField(choices=[('draft', 'Чернетка'), ('published', 'Опубліковано')], default='draft', max_length=20)),
                ('locale', models.CharField(choices=[('uk-UA', 'uk-UA')], default='uk-UA', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('links_cv_file', models.CharField(blank=True, max_length=255)),
                ('links_linkedin_url', models.URLField(blank=True)),
                ('links_portfolio_url', models.URLField(blank=True)),
                ('salary_min', models.PositiveIntegerField(blank=True, null=True)),
                ('salary_max', models.PositiveIntegerField(blank=True, null=True)),
                ('salary_currency', models.CharField(blank=True, max_length=3)),
                ('analyzed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cvs', to=settings.AUTH_USER_MODEL)),
                ('work_options', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cvs.workoptions')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, validators=[cvs.models.validate_course_name])),
                ('provider', models.CharField(max_length=200, validators=[cvs.models.validate_course_provider])),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('order_index', models.PositiveIntegerField(default=0)),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='cvs.cv')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('major', models.CharField(blank=True, max_length=200, validators=[cvs.models.validate_education_major])),
                ('institution', models.CharField(max_length=200, validators=[cvs.models.validate_education_institution])),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('order_index', models.PositiveIntegerField(default=0)),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to='cvs.cv')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, validators=[cvs.models.validate_language_name])),
                ('level', models.CharField(choices=[('A1', 'A1'), ('A2', 'A2'), ('B1', 'B1'), ('B2', 'B2'), ('C1', 'C1'), ('C2', 'C2'), ('native', 'Рідна')], max_length=10)),
                ('description', models.TextField(blank=True)),
                ('order_index', models.PositiveIntegerField(default=0)),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='languages', to='cvs.cv')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, validators=[cvs.models.validate_skill_name])),
                ('description', models.TextField(blank=True)),
                ('level', models.CharField(blank=True, choices=[('basic', 'Базовий'), ('intermediate', 'Середній'), ('advanced', 'Просунутий'), ('expert', 'Експерт')], max_length=20, null=True)),
                ('order_index', models.PositiveIntegerField(default=0)),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='cvs.cv')),
            ],
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position', models.CharField(max_length=120, validators=[cvs.models.validate_work_experience_position])),
                ('company', models.CharField(max_length=120, validators=[cvs.models.validate_work_experience_company])),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('responsibilities', models.TextField(blank=True)),
                ('order_index', models.PositiveIntegerField(default=0)),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_experiences', to='cvs.cv')),
            ],
        ),
        migrations.AddConstraint(
            model_name='cv',
            constraint=models.UniqueConstraint(fields=('user', 'personal_email'), name='unique_user_email_per_cv'),
        ),
    ]
