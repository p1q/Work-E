name: Work-E CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Upload Docker Image
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build \
            --no-cache \
            --pull \
            --force-rm \
            -f Dockerfile \
            -t django-work-e .

      - name: Save Docker image to tarball
        run: docker save django-work-e -o django-work-e.tar

      - name: Upload tarball to server via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          source: "django-work-e.tar"
          target: "~/deploy-artifacts/"

  deploy:
    name: Deploy from Server
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH to server and deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          script: |
            cd ~/deploy-artifacts

            # Очистим старые контейнеры и образы
            docker ps -aq | xargs -r docker rm -f
            docker images -q | xargs -r docker rmi -f

            # Загрузим новый образ
            docker load -i django-work-e.tar

            # Соберём .env и запустим контейнер
            cat > ~/dev.env << 'EOF'
            DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
            DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}
            ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}

            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_SSLMODE=require

            CV_FILES_PATH=${{ secrets.CV_FILES_PATH }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            EOF

            docker run -d \
              --name work-e-app \
              --restart unless-stopped \
              -v ~/dev.env:/app/dev.env \
              -v ~/cv-files:/app/cv-files \
              -e TZ=Europe/Kyiv \
              -p 8000:8000 \
              django-work-e \
              python manage.py runserver 0.0.0.0:8000
